import{shallowRef as h,readonly as g,computed as y}from"vue";import{useRouter as E}from"vue-router";import{usePageData as k,usePageFrontmatter as v,useRouteLocale as R}from"vuepress/client";import{resolveRouteWithRedirect as B}from"vuepress-shared/client";import{categoryMap as w}from"@temp/blog/category";import{typeMap as C}from"@temp/blog/type";const M=h(w),_=g(M),O=e=>{const l=k(),m=v(),u=E(),s=R();return y(()=>{const r=e??m.value.blog?.key??"";if(!r)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};const i=u.getRoutes();if(!_.value[r])throw new Error(`useBlogCategory: key ${r} is invalid`);const p=_.value[r][s.value],o={path:p.path,map:{}};for(const a in p.map){const t=p.map[a];o.map[a]={path:t.path,items:[]};for(const T of t.keys){const f=i.find(({name:n})=>n===T);if(f){const n=B(u,f.path);o.map[a].items.push({path:n.path,info:BLOG_META_SCOPE===""?n.meta:n.meta[BLOG_META_SCOPE]})}}l.value.path===t.path&&(o.currentItems=o.map[a].items)}return o})};__VUEPRESS_DEV__&&(import.meta.webpackHot||import.meta.hot)&&(__VUE_HMR_RUNTIME__.updateBlogCategory=e=>{M.value=e});const d=h(C),c=g(d),P=e=>{const l=v(),m=E(),u=R();return y(()=>{const s=e??l.value.blog?.key??"";if(!s)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!c.value[s])throw new Error(`useBlogType: key ${e} is invalid`);const r=m.getRoutes(),i=c.value[s][u.value],p={path:i.path,items:[]};for(const o of i.keys){const a=r.find(({name:t})=>t===o);if(a){const t=B(m,a.path);p.items.push({path:t.path,info:BLOG_META_SCOPE===""?t.meta:t.meta[BLOG_META_SCOPE]})}}return p})};__VUEPRESS_DEV__&&(import.meta.webpackHot||import.meta.hot)&&(__VUE_HMR_RUNTIME__.updateBlogType=e=>{d.value=e});export{_ as blogCategoryMap,c as blogTypeMap,O as useBlogCategory,P as useBlogType};
//# sourceMappingURL=index.js.map
