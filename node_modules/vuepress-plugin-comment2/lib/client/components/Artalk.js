import{defineComponent as c,ref as v,shallowRef as g,onMounted as w,watch as s,onUnmounted as y,h as r,nextTick as u}from"vue";import{usePageData as h,useSiteData as D}from"vuepress/client";import{isString as M,LoadingIcon as T}from"vuepress-shared/client";import"artalk/dist/Artalk.css";import"../styles/artalk.scss";import{u as A}from"../index-wG_My4pN.js";var B=c({name:"Artalk",props:{identifier:{type:String,required:!0},darkmode:Boolean},setup(a){const t=A(),o=h(),n=D(),l=v(!1),d=g();let e=null;const m=M(t.server),p=async()=>{const[{default:i}]=await Promise.all([import("artalk/dist/Artalk.mjs"),new Promise(k=>{setTimeout(()=>{k()},t.delay||800)})]);l.value=!0,await u(),e=i.init({useBackendConf:!1,site:n.value.title,pageTitle:o.value.title,...t,el:d.value,pageKey:a.identifier,darkMode:a.darkmode}),t.useBackendConf&&e.on("conf-loaded",()=>{e.setDarkMode(a.darkmode)})},f=()=>{e.update({site:n.value.title,pageTitle:o.value.title,pageKey:a.identifier}),e.reload()};return w(()=>{p(),s(()=>a.identifier,()=>{e&&u().then(()=>f())}),s(()=>a.darkmode,i=>{e?.setDarkMode(i)})}),y(()=>{e?.destroy()}),()=>m?r("div",{class:"artalk-wrapper"},[l.value?null:r(T),r("div",{ref:d})]):null}});export{B as default};
//# sourceMappingURL=Artalk.js.map
