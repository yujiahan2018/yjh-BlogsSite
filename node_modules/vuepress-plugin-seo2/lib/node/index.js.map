{"version":3,"file":"index.js","sources":["../../src/node/compact.ts","../../src/node/description.ts","../../src/node/utils.ts","../../src/node/info.ts","../../src/node/inject.ts","../../src/node/seo.ts","../../src/node/plugin.ts"],"sourcesContent":["import { createConverter } from \"vuepress-shared/node\";\n\nimport type { SeoOptions } from \"./options.js\";\n\n/** @deprecated */\nexport const convertOptions = (\n  options: SeoOptions & Record<string, unknown>,\n): void => {\n  const { droppedLogger } = createConverter(\"seo\");\n\n  droppedLogger({\n    options,\n    old: \"seo\",\n    new: \"ogp\",\n  });\n  droppedLogger({\n    options,\n    old: \"customMeta\",\n    new: \"customHead\",\n  });\n};\n","import { getPageText, stripTags } from \"vuepress-shared/node\";\n\nimport type { ExtendPage } from \"./typings/index.js\";\n\nexport const generateDescription = (\n  page: ExtendPage,\n  autoDescription = true,\n): void => {\n  // generate description\n  if (!page.frontmatter.description && autoDescription) {\n    if (page.data.excerpt) {\n      page.frontmatter.description = stripTags(page.data.excerpt)\n        // convert link breaks into spaces\n        .replace(/(?:\\r?\\n)+/g, \" \")\n        // convert 2 or more spaces into 1\n        .replace(/ +/g, \" \")\n        .trim();\n    } else {\n      const pageText = getPageText(page);\n\n      page.frontmatter.description =\n        pageText.length > 180 ? `${pageText.slice(0, 177)}...` : pageText;\n    }\n\n    page.data.autoDesc = true;\n  }\n};\n","import type { App, Page } from \"vuepress/core\";\nimport {\n  Logger,\n  entries,\n  isAbsoluteUrl,\n  isLinkHttp,\n  isString,\n  isUrl,\n  removeEndingSlash,\n  removeLeadingSlash,\n} from \"vuepress-shared/node\";\n\nimport type { SeoOptions } from \"./options.js\";\nimport type { ExtendPage } from \"./typings/index.js\";\n\nexport const PLUGIN_NAME = \"vuepress-plugin-seo2\";\n\nexport const logger = new Logger(PLUGIN_NAME);\n\nexport interface AlternateInfo {\n  path: string;\n  lang: string;\n}\n\nexport const getAlternateInfo = (\n  { lang, path, pathLocale }: Page,\n  { pages, siteData }: App,\n): AlternateInfo[] =>\n  entries(siteData.locales)\n    .map(([localePath, { lang }]) => ({\n      path: `${localePath}${path.replace(pathLocale, \"\")}`,\n      lang,\n    }))\n    .filter(\n      (item): item is AlternateInfo =>\n        isString(item.lang) &&\n        item.lang !== lang &&\n        pages.some(({ path }) => path === item.path),\n    );\n\nexport const getCover = (\n  { frontmatter }: ExtendPage,\n  { options: { base } }: App,\n  { hostname }: SeoOptions,\n): string | null => {\n  const { banner, cover } = frontmatter;\n\n  if (banner) {\n    if (isAbsoluteUrl(banner)) return resolveUrl(hostname, base, banner);\n\n    if (isUrl(banner)) return banner;\n  }\n\n  if (cover) {\n    if (isAbsoluteUrl(cover)) return resolveUrl(hostname, base, cover);\n\n    if (isUrl(cover)) return cover;\n  }\n\n  return null;\n};\n\nexport const getImages = (\n  { content }: ExtendPage,\n  { options: { base } }: App,\n  { hostname }: SeoOptions,\n): string[] => {\n  const result = /!\\[.*?\\]\\((.*?)\\)/giu.exec(content);\n\n  if (result)\n    return result\n      .map(([, link]) => {\n        if (isAbsoluteUrl(link)) return resolveUrl(hostname, base, link);\n\n        if (isUrl(link)) return link;\n\n        return null;\n      })\n      .filter((item): item is string => item !== null);\n\n  return [];\n};\n\nexport const resolveUrl = (\n  hostname: string,\n  base: string,\n  url: string,\n): string =>\n  `${\n    isLinkHttp(hostname)\n      ? removeEndingSlash(hostname)\n      : `https://${removeEndingSlash(hostname)}`\n  }${base}${removeLeadingSlash(url)}`;\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport type { App } from \"vuepress/core\";\nimport {\n  getAuthor,\n  getDateInfo,\n  isArray,\n  isFunction,\n  isString,\n  removeEndingSlash,\n} from \"vuepress-shared/node\";\n\nimport type { SeoOptions } from \"./options.js\";\nimport type {\n  ArticleSchema,\n  BlogPostingSchema,\n  ExtendPage,\n  SeoContent,\n  WebPageSchema,\n} from \"./typings/index.js\";\nimport { getAlternateInfo, getCover, getImages, resolveUrl } from \"./utils.js\";\n\nexport const getOGP = (\n  page: ExtendPage,\n  options: SeoOptions,\n  app: App,\n): SeoContent => {\n  const {\n    isArticle = (page): boolean =>\n      Boolean(page.filePathRelative && !page.frontmatter[\"home\"]),\n    author: globalAuthor,\n  } = options;\n  const {\n    options: { base },\n    siteData,\n  } = app;\n  const {\n    frontmatter: {\n      author: pageAuthor,\n      time,\n      date = time,\n      tag,\n      tags = <string[]>tag,\n    },\n    data: { git = {} },\n  } = page;\n\n  const title =\n    siteData.locales[page.pathLocale]?.title ||\n    siteData.title ||\n    siteData.locales[\"/\"]?.title ||\n    \"\";\n  const author =\n    pageAuthor === false ? [] : getAuthor(pageAuthor || globalAuthor);\n  const modifiedTime = git.updatedTime\n    ? new Date(git.updatedTime).toISOString()\n    : null;\n  const articleTags = isArray(tags) ? tags : isString(tag) ? [tag] : [];\n  const articleTitle = page.title;\n  const cover = getCover(page, app, options);\n  const images = getImages(page, app, options);\n  const locales = getAlternateInfo(page, app);\n  const publishedTime = getDateInfo(date)?.value?.toISOString();\n\n  const ogImage = cover || images[0] || options.fallBackImage || \"\";\n\n  const defaultOGP: SeoContent = {\n    \"og:url\": resolveUrl(options.hostname, base, page.path),\n    \"og:site_name\": title,\n    \"og:title\": articleTitle,\n    \"og:description\": page.frontmatter.description || \"\",\n    \"og:type\": isArticle(page) ? \"article\" : \"website\",\n    \"og:image\": ogImage,\n    \"og:locale\": page.lang,\n    \"og:locale:alternate\": locales.map(({ lang }) => lang),\n    ...(modifiedTime ? { \"og:updated_time\": modifiedTime } : {}),\n    ...(options.restrictions\n      ? { \"og:restrictions:age\": options.restrictions }\n      : {}),\n\n    ...(options.twitterID ? { \"twitter:creator\": options.twitterID } : {}),\n    ...(ogImage\n      ? {\n          \"twitter:card\": \"summary_large_image\",\n          \"twitter:image:alt\": articleTitle,\n        }\n      : {}),\n\n    \"article:author\": author[0]?.name,\n    \"article:tag\": articleTags,\n    ...(publishedTime ? { \"article:published_time\": publishedTime } : {}),\n    ...(modifiedTime ? { \"article:modified_time\": modifiedTime } : {}),\n  };\n\n  return defaultOGP;\n};\n\nexport const getJSONLD = (\n  page: ExtendPage,\n  options: SeoOptions,\n  app: App,\n): ArticleSchema | BlogPostingSchema | WebPageSchema => {\n  const {\n    isArticle = (page): boolean =>\n      Boolean(page.filePathRelative && !page.frontmatter[\"home\"]),\n    author: globalAuthor,\n  } = options;\n\n  const {\n    title,\n    frontmatter: { author: pageAuthor, description, time, date = time },\n    data: { git = {} },\n  } = page;\n\n  const author =\n    pageAuthor === false ? [] : getAuthor(pageAuthor || globalAuthor);\n  const datePublished = getDateInfo(date)?.value?.toISOString();\n  const dateModified = git.updatedTime\n    ? new Date(git.updatedTime).toISOString()\n    : null;\n  const cover = getCover(page, app, options);\n  const images = getImages(page, app, options);\n\n  return isArticle(page)\n    ? {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"Article\",\n        headline: title,\n        image: images.length ? images : [cover || options.fallBackImage || \"\"],\n        datePublished,\n        dateModified,\n        author: author.map((item) => ({ \"@type\": \"Person\", ...item })),\n      }\n    : {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"WebPage\",\n        name: title,\n        ...(description ? { description } : {}),\n      };\n};\n\nexport const getCanonicalLink = (\n  page: ExtendPage,\n  options: SeoOptions,\n): string | null =>\n  isFunction(options.canonical)\n    ? options.canonical(page)\n    : isString(options.canonical)\n      ? `${removeEndingSlash(options.canonical)}${page.path}`\n      : null;\n\nexport const getAlternateLinks = (\n  page: ExtendPage,\n  { hostname }: SeoOptions,\n  app: App,\n): { lang: string; path: string }[] =>\n  getAlternateInfo(page, app).map(({ lang, path }) => ({\n    lang,\n    path: resolveUrl(hostname, app.options.base, path),\n  }));\n","import type { HeadConfig } from \"vuepress/core\";\nimport { startsWith } from \"vuepress-shared/node\";\n\nimport type {\n  ArticleSchema,\n  ArticleSeoContent,\n  BlogPostingSchema,\n  SeoContent,\n  WebPageSchema,\n} from \"./typings/index.js\";\n\ninterface MetaOptions {\n  name: string;\n  content: string;\n  attribute?: string;\n}\n\nconst appendMetaToHead = (\n  head: HeadConfig[],\n  {\n    name,\n    content,\n    attribute = [\"article:\", \"og:\"].some((type) => startsWith(name, type))\n      ? \"property\"\n      : \"name\",\n  }: MetaOptions,\n): void => {\n  if (content) head.push([\"meta\", { [attribute]: name, content }]);\n};\n\nexport const addOGP = (head: HeadConfig[], content: SeoContent): void => {\n  for (const property in content)\n    switch (property) {\n      case \"article:tag\":\n        (<ArticleSeoContent>content)[\"article:tag\"]!.forEach((tag: string) =>\n          appendMetaToHead(head, { name: \"article:tag\", content: tag }),\n        );\n        break;\n      case \"og:locale:alternate\":\n        content[\"og:locale:alternate\"].forEach((locale: string) => {\n          if (locale !== content[\"og:locale\"])\n            appendMetaToHead(head, {\n              name: \"og:locale:alternate\",\n              content: locale,\n            });\n        });\n        break;\n      default:\n        if (<string>content[<keyof SeoContent>property])\n          appendMetaToHead(head, {\n            name: property,\n            content: <string>content[<keyof SeoContent>property],\n          });\n    }\n};\n\nexport const appendJSONLD = (\n  head: HeadConfig[],\n  content: ArticleSchema | BlogPostingSchema | WebPageSchema,\n): void => {\n  head.push([\n    \"script\",\n    { type: \"application/ld+json\" },\n    JSON.stringify(content),\n  ]);\n};\n\nexport const appendCanonical = (\n  head: HeadConfig[],\n  url?: string | null,\n): void => {\n  if (url) head.push([\"link\", { rel: \"canonical\", href: url }]);\n};\n\nexport const appendAlternate = (\n  head: HeadConfig[],\n  urls: { lang: string; path: string }[],\n): void => {\n  urls.forEach(({ lang, path }) => {\n    head.push([\n      \"link\",\n      { rel: \"alternate\", hreflang: lang.toLowerCase(), href: path },\n    ]);\n  });\n};\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport type { App, AppDir } from \"vuepress/core\";\nimport { fs } from \"vuepress/utils\";\n\nimport {\n  getAlternateLinks,\n  getCanonicalLink,\n  getJSONLD,\n  getOGP,\n} from \"./info.js\";\nimport {\n  addOGP,\n  appendAlternate,\n  appendCanonical,\n  appendJSONLD,\n} from \"./inject.js\";\nimport type { SeoOptions } from \"./options.js\";\nimport type { ExtendPage } from \"./typings/index.js\";\nimport { logger } from \"./utils.js\";\n\nexport const appendSEO = (app: App, options: SeoOptions): void => {\n  app.pages.forEach((page: ExtendPage) => {\n    const head = page.frontmatter.head || [];\n\n    const canonicalLink = getCanonicalLink(page, options);\n    const alternateLinks = getAlternateLinks(page, options, app);\n\n    appendCanonical(head, canonicalLink);\n    appendAlternate(head, alternateLinks);\n\n    if (page.frontmatter[\"seo\"] !== false) {\n      const defaultOGP = getOGP(page, options, app);\n      const defaultJSONLD = getJSONLD(page, options, app);\n\n      const ogpContent = options.ogp\n        ? options.ogp(defaultOGP, page, app)\n        : defaultOGP;\n\n      const jsonLDContent = options.jsonLd\n        ? options.jsonLd(defaultJSONLD, page, app)\n        : defaultJSONLD;\n\n      addOGP(head, ogpContent);\n      appendJSONLD(head, jsonLDContent);\n\n      if (options.customHead) options.customHead(head, page, app);\n    }\n\n    page.frontmatter.head = head;\n  });\n};\n\nexport const generateRobotsTxt = async (dir: AppDir): Promise<void> => {\n  logger.load(\"Generating robots.txt\");\n  const publicPath = dir.public(\"robots.txt\");\n\n  let content = fs.existsSync(publicPath)\n    ? await fs.readFile(publicPath, { encoding: \"utf8\" })\n    : \"\";\n\n  if (content && !content.includes(\"User-agent\")) {\n    logger.error();\n    logger.update(\"robots.txt seems invalid!\");\n  } else {\n    content += \"\\nUser-agent:*\\nDisallow:\\n\";\n\n    await fs.writeFile(dir.dest(\"robots.txt\"), content, {\n      flag: \"w\",\n    });\n\n    logger.succeed();\n  }\n};\n","import type { Plugin, PluginFunction } from \"vuepress/core\";\nimport { colors } from \"vuepress/utils\";\n\nimport { convertOptions } from \"./compact.js\";\nimport { generateDescription } from \"./description.js\";\nimport type { SeoOptions } from \"./options.js\";\nimport { appendSEO, generateRobotsTxt } from \"./seo.js\";\nimport type { ExtendPage } from \"./typings/index.js\";\nimport { PLUGIN_NAME, logger } from \"./utils.js\";\n\nexport const seoPlugin =\n  (options: SeoOptions, legacy = true): PluginFunction =>\n  (app) => {\n    // TODO: Remove this in v2 stable\n    if (legacy) convertOptions(options as SeoOptions & Record<string, unknown>);\n\n    if (app.env.isDebug) logger.info(\"Options:\", options);\n\n    const plugin: Plugin = { name: PLUGIN_NAME };\n\n    if (!options.hostname) {\n      logger.error(`Option ${colors.magenta(\"hostname\")} is required!`);\n\n      return plugin;\n    }\n\n    return {\n      ...plugin,\n\n      extendsPage: (page: ExtendPage): void => {\n        if (page.frontmatter.seo !== false)\n          generateDescription(page, options.autoDescription !== false);\n      },\n\n      onInitialized: (app): void => {\n        appendSEO(app, options);\n      },\n\n      onGenerated: (app): Promise<void> => generateRobotsTxt(app.dir),\n    };\n  };\n"],"names":["convertOptions","options","droppedLogger","createConverter","generateDescription","page","autoDescription","stripTags","pageText","getPageText","PLUGIN_NAME","logger","Logger","getAlternateInfo","lang","path","pathLocale","pages","siteData","entries","localePath","item","isString","getCover","frontmatter","base","hostname","banner","cover","isAbsoluteUrl","resolveUrl","isUrl","getImages","content","result","link","url","isLinkHttp","removeEndingSlash","removeLeadingSlash","getOGP","app","isArticle","globalAuthor","pageAuthor","time","date","tag","tags","git","title","author","getAuthor","modifiedTime","articleTags","isArray","articleTitle","images","locales","publishedTime","getDateInfo","ogImage","getJSONLD","description","datePublished","dateModified","getCanonicalLink","isFunction","getAlternateLinks","appendMetaToHead","head","name","attribute","type","startsWith","addOGP","property","locale","appendJSONLD","appendCanonical","appendAlternate","urls","appendSEO","canonicalLink","alternateLinks","defaultOGP","defaultJSONLD","ogpContent","jsonLDContent","generateRobotsTxt","dir","publicPath","fs","seoPlugin","legacy","plugin","colors"],"mappings":"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"}