{"version":3,"file":"index.js","sources":["../../src/node/compact.ts","../../src/node/utils.ts","../../src/node/generateSitemap.ts","../../src/node/plugin.ts"],"sourcesContent":["import { createConverter } from \"vuepress-shared/node\";\n\nimport type { SitemapOptions } from \"./options.js\";\n\n/** @deprecated */\nexport const convertOptions = (\n  options: SitemapOptions & Record<string, unknown>,\n): void => {\n  const { deprecatedLogger } = createConverter(\"sitemap\");\n\n  deprecatedLogger({\n    options,\n    old: \"urls\",\n    new: \"extraUrls\",\n  });\n  deprecatedLogger({\n    options,\n    old: \"exclude\",\n    new: \"excludeUrls\",\n  });\n  deprecatedLogger({\n    options,\n    old: \"outFile\",\n    new: \"sitemapFilename\",\n  });\n  deprecatedLogger({\n    options,\n    old: \"dateFormatter\",\n    new: \"modifyTimeGetter\",\n  });\n};\n","import { getDirname, path } from \"vuepress/utils\";\nimport { Logger, ensureEndingSlash } from \"vuepress-shared/node\";\n\nconst __dirname = getDirname(import.meta.url);\n\nexport const TEMPLATE_FOLDER = ensureEndingSlash(\n  path.resolve(__dirname, \"../../templates\"),\n);\n\nexport const PLUGIN_NAME = \"vuepress-plugin-sitemap2\";\n\nexport const logger = new Logger(PLUGIN_NAME);\n","import type { GitData } from \"@vuepress/plugin-git\";\nimport { SitemapStream } from \"sitemap\";\nimport type { App, Page } from \"vuepress/core\";\nimport { colors, fs } from \"vuepress/utils\";\nimport {\n  isLinkHttp,\n  removeEndingSlash,\n  removeLeadingSlash,\n} from \"vuepress-shared/node\";\n\nimport type { ModifyTimeGetter, SitemapOptions } from \"./options.js\";\nimport type {\n  SitemapImageOption,\n  SitemapLinkOption,\n  SitemapNewsOption,\n  SitemapPluginFrontmatter,\n  SitemapVideoOption,\n} from \"./typings/index.js\";\nimport { TEMPLATE_FOLDER, logger } from \"./utils.js\";\n\ninterface SitemapPageInfo {\n  lastmod?: string;\n  changefreq?: string;\n  priority?: number;\n  img?: SitemapImageOption[];\n  video?: SitemapVideoOption[];\n  links?: SitemapLinkOption[];\n  news?: SitemapNewsOption[];\n}\n\nconst reportedLocales: string[] = [];\n\nconst stripLocalePrefix = ({\n  path,\n  pathLocale,\n}: Page): {\n  /** path of root locale */\n  defaultPath: string;\n  /** Locale path prefix of the page */\n  pathLocale: string;\n} => ({\n  defaultPath: path.replace(pathLocale, \"/\"),\n  pathLocale: pathLocale,\n});\n\nconst generatePageMap = (\n  app: App,\n  options: SitemapOptions,\n): Map<string, SitemapPageInfo> => {\n  const {\n    changefreq = \"daily\",\n    excludeUrls = [\"/404.html\"],\n    modifyTimeGetter = <ModifyTimeGetter>(\n      ((page: Page<{ git: GitData }>): string =>\n        page.data.git?.updatedTime\n          ? new Date(page.data.git.updatedTime).toISOString()\n          : \"\")\n    ),\n  } = options;\n\n  const {\n    options: { base, locales },\n    pages,\n  } = app;\n\n  const pageLocalesMap = pages.reduce(\n    (map, page) => {\n      const { defaultPath, pathLocale } = stripLocalePrefix(page);\n      const pathLocales = map.get(defaultPath) || [];\n\n      pathLocales.push(pathLocale);\n\n      return map.set(defaultPath, pathLocales);\n    },\n    // a map with keys of defaultPath and string[] value with pathLocales\n    new Map<string, string[]>(),\n  );\n\n  const pagesMap = new Map<string, SitemapPageInfo>();\n\n  pages.forEach(\n    (page: Page<Record<never, never>, SitemapPluginFrontmatter>) => {\n      const frontmatterOptions = page.frontmatter.sitemap;\n\n      if (frontmatterOptions === false) return;\n\n      const metaRobotTags = (page.frontmatter.head || []).find(\n        (head) => head[1][\"name\"] === \"robots\",\n      );\n\n      if (\n        // meta tags do not allow index\n        (<string>metaRobotTags?.[1][\"content\"] || \"\")\n          .split(/,/u)\n          .map((content) => content.trim())\n          .includes(\"noindex\") ||\n        // exclude in plugin options\n        excludeUrls.includes(page.path)\n      )\n        return;\n\n      const lastModifyTime = modifyTimeGetter(page, app);\n      const { defaultPath } = stripLocalePrefix(page);\n      const relatedLocales = pageLocalesMap.get(defaultPath) || [];\n\n      let links: SitemapLinkOption[] = [];\n\n      if (relatedLocales.length > 1) {\n        // warnings for missing `locale[path].lang` in debug mode\n        if (app.env.isDebug)\n          relatedLocales.forEach((localePrefix) => {\n            if (\n              !locales[localePrefix].lang &&\n              !reportedLocales.includes(localePrefix)\n            ) {\n              logger.warn(`\"lang\" option for ${localePrefix} is missing`);\n              reportedLocales.push(localePrefix);\n            }\n          });\n\n        links = relatedLocales.map((localePrefix) => ({\n          lang: locales[localePrefix]?.lang || \"en\",\n          url: `${base}${removeLeadingSlash(\n            defaultPath.replace(/^\\//u, localePrefix),\n          )}`,\n        }));\n      }\n\n      const sitemapInfo: SitemapPageInfo = {\n        ...(changefreq ? { changefreq } : {}),\n        links,\n        ...(lastModifyTime ? { lastmod: lastModifyTime } : {}),\n        ...frontmatterOptions,\n      };\n\n      // log sitemap info in debug mode\n      if (app.env.isDebug)\n        logger.info(\n          `sitemap option for ${page.path}: ${JSON.stringify(\n            sitemapInfo,\n            null,\n            2,\n          )}`,\n        );\n\n      pagesMap.set(page.path, sitemapInfo);\n    },\n  );\n\n  return pagesMap;\n};\n\nexport const generateSiteMap = async (\n  app: App,\n  options: SitemapOptions,\n): Promise<void> => {\n  const { extraUrls = [], xmlNameSpace: xmlns } = options;\n  const hostname = isLinkHttp(options.hostname)\n    ? removeEndingSlash(options.hostname)\n    : `https://${removeEndingSlash(options.hostname)}`;\n  const sitemapFilename = options.sitemapFilename\n    ? removeLeadingSlash(options.sitemapFilename)\n    : \"sitemap.xml\";\n  const sitemapXSLFilename = options.sitemapXSLFilename\n    ? removeLeadingSlash(options.sitemapXSLFilename)\n    : \"sitemap.xsl\";\n  const sitemapXSLTemplate =\n    options.sitemapXSLTemplate ?? `${TEMPLATE_FOLDER}sitemap.xsl`;\n\n  const {\n    dir,\n    options: { base },\n  } = app;\n\n  logger.load(`Generating sitemap to ${colors.cyan(`/${sitemapFilename}`)}`);\n\n  await new Promise<void>((resolve) => {\n    const sitemap = new SitemapStream({\n      hostname,\n      ...(xmlns ? { xmlns } : {}),\n    });\n    const pagesMap = generatePageMap(app, options);\n    const sitemapXMLPath = dir.dest(sitemapFilename);\n    const sitemapXSLPath = dir.dest(sitemapXSLFilename);\n    const writeStream = fs.createWriteStream(sitemapXMLPath);\n\n    sitemap.pipe(writeStream);\n\n    pagesMap.forEach((page, path) =>\n      sitemap.write({\n        url: `${base}${removeLeadingSlash(path)}`,\n        ...page,\n      }),\n    );\n\n    writeStream.on(\"finish\", () => {\n      const content = fs.readFileSync(sitemapXMLPath, {\n        encoding: \"utf-8\",\n      });\n\n      fs.writeFileSync(\n        sitemapXMLPath,\n        content.replace(\n          '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\n          `\\\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"${base}${sitemapXSLFilename}\"?>\n`,\n        ),\n      );\n\n      fs.copySync(sitemapXSLTemplate, sitemapXSLPath);\n\n      resolve();\n    });\n\n    extraUrls.forEach((item) =>\n      sitemap.write({ url: `${base}${removeLeadingSlash(item)}` }),\n    );\n    sitemap.end();\n  });\n\n  logger.succeed();\n\n  const robotTxtPath = dir.dest(\"robots.txt\");\n\n  if (fs.existsSync(robotTxtPath)) {\n    logger.load(`Appended sitemap path to ${colors.cyan(\"robots.txt\")}`);\n\n    const robotsTxt = await fs.readFile(robotTxtPath, { encoding: \"utf8\" });\n\n    const newRobotsTxtContent = `${robotsTxt.replace(\n      /^Sitemap: .*$/u,\n      \"\",\n    )}\\nSitemap: ${hostname}${base}${sitemapFilename}\\n`;\n\n    await fs.writeFile(robotTxtPath, newRobotsTxtContent, { flag: \"w\" });\n\n    logger.succeed();\n  }\n};\n","import type { PluginFunction, PluginObject } from \"vuepress/core\";\nimport { colors } from \"vuepress/utils\";\n\nimport { convertOptions } from \"./compact.js\";\nimport { generateSiteMap } from \"./generateSitemap.js\";\nimport type { SitemapOptions } from \"./options.js\";\nimport { PLUGIN_NAME, logger } from \"./utils.js\";\n\nexport const sitemapPlugin =\n  (options: SitemapOptions, legacy = true): PluginFunction =>\n  (app) => {\n    // TODO: Remove this in v2 stable\n    if (legacy)\n      convertOptions(options as SitemapOptions & Record<string, unknown>);\n\n    if (app.env.isDebug) logger.info(\"Options:\", options);\n\n    const plugin: PluginObject = {\n      name: PLUGIN_NAME,\n    };\n\n    if (!options.hostname) {\n      logger.error(`Option ${colors.magenta(\"hostname\")} is required!`);\n\n      return plugin;\n    }\n\n    return {\n      ...plugin,\n\n      onGenerated: (app): Promise<void> => generateSiteMap(app, options),\n    };\n  };\n"],"names":["convertOptions","options","deprecatedLogger","createConverter","__dirname","getDirname","TEMPLATE_FOLDER","ensureEndingSlash","path","PLUGIN_NAME","logger","Logger","reportedLocales","stripLocalePrefix","pathLocale","generatePageMap","app","changefreq","excludeUrls","modifyTimeGetter","page","base","locales","pages","pageLocalesMap","map","defaultPath","pathLocales","pagesMap","frontmatterOptions","head","content","lastModifyTime","relatedLocales","links","localePrefix","removeLeadingSlash","sitemapInfo","generateSiteMap","extraUrls","xmlns","hostname","isLinkHttp","removeEndingSlash","sitemapFilename","sitemapXSLFilename","sitemapXSLTemplate","dir","colors","resolve","sitemap","SitemapStream","sitemapXMLPath","sitemapXSLPath","writeStream","fs","item","robotTxtPath","newRobotsTxtContent","sitemapPlugin","legacy","plugin"],"mappings":"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"}