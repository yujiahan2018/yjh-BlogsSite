{"version":3,"file":"HopeIcon.js","sourceRoot":"","sources":["../../../src/client/components/HopeIcon.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,CAAC,EAAE,gBAAgB,EAAE,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AAQnE,MAAM,QAAQ,GAAmC,CAAC,KAAK,EAAE,EAAE;IACzD,MAAM,EAAE,IAAI,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;IACzC,MAAM,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,CAAC,CAAyB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAEhE,IAAI,KAAK;QAAE,KAAM,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;IACnC,IAAI,IAAI;QACN,KAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC;IAE7E,OAAO,UAAU,CAAC,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;YACP,KAAK,EAAE,MAAM;YACb,GAAG,EAAE,IAAI;YACT,GAAG,EAAE,EAAE;YACP,SAAS,EAAE,EAAE;YACb,KAAK;SACN,CAAC;QACJ,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC;YACnB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;gBACP,KAAK,EAAE,MAAM;gBACb,GAAG,EAAE,QAAQ,CAAC,IAAI,CAAC;gBACnB,GAAG,EAAE,EAAE;gBACP,aAAa,EAAE,EAAE;gBACjB,SAAS,EAAE,EAAE;gBACb,KAAK;aACN,CAAC;YACJ,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;AAC/C,CAAC,CAAC;AAEF,QAAQ,CAAC,WAAW,GAAG,UAAU,CAAC;AAElC,eAAe,QAAQ,CAAC","sourcesContent":["import type { FunctionalComponent } from \"vue\";\nimport { h, resolveComponent } from \"vue\";\nimport { withBase } from \"vuepress/client\";\nimport { isAbsoluteUrl, isLinkHttp } from \"vuepress-shared/client\";\n\nexport interface IconProps {\n  icon?: string | undefined;\n  color?: string | undefined;\n  size?: string | number | undefined;\n}\n\nconst HopeIcon: FunctionalComponent<IconProps> = (props) => {\n  const { icon = \"\", color, size } = props;\n  const style = color || size ? <Record<string, string>>{} : null;\n\n  if (color) style![\"color\"] = color;\n  if (size)\n    style![\"height\"] = Number.isNaN(Number(size)) ? <string>size : `${size}px`;\n\n  return isLinkHttp(icon)\n    ? h(\"img\", {\n        class: \"icon\",\n        src: icon,\n        alt: \"\",\n        \"no-view\": \"\",\n        style,\n      })\n    : isAbsoluteUrl(icon)\n      ? h(\"img\", {\n          class: \"icon\",\n          src: withBase(icon),\n          alt: \"\",\n          \"aria-hidden\": \"\",\n          \"no-view\": \"\",\n          style,\n        })\n      : h(resolveComponent(\"FontIcon\"), props);\n};\n\nHopeIcon.displayName = \"HopeIcon\";\n\nexport default HopeIcon;\n"]}