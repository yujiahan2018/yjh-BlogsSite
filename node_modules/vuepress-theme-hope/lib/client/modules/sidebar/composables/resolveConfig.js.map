{"version":3,"file":"resolveConfig.js","sourceRoot":"","sources":["../../../../../src/client/modules/sidebar/composables/resolveConfig.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport type { Router } from \"vue-router\";\nimport type { PageData, PageHeader } from \"vuepress/client\";\nimport {\n  isArray,\n  isLinkExternal,\n  isPlainObject,\n  isString,\n  keys,\n  startsWith,\n} from \"vuepress-shared/client\";\n\nimport { sidebarData } from \"@temp/theme-hope/sidebar\";\nimport { resolveLinkInfo, resolvePrefix } from \"@theme-hope/utils/index\";\n\nimport type {\n  SidebarArrayOptions,\n  SidebarItem,\n  SidebarObjectOptions,\n  SidebarOptions,\n} from \"../../../../shared/index.js\";\nimport type {\n  ResolvedSidebarGroupItem,\n  ResolvedSidebarHeaderItem,\n  ResolvedSidebarItem,\n  ResolvedSidebarPageItem,\n} from \"../utils/index.js\";\n\n/**\n * Util to transform page header to sidebar item\n */\nexport const headersToSidebarItemChildren = (\n  page: PageData,\n  headers: PageHeader[],\n  headerDepth: number,\n): ResolvedSidebarHeaderItem[] =>\n  headerDepth > 0\n    ? headers.map((header) => ({\n        type: \"heading\",\n        text: header.title,\n        link: `${page.path}#${header.slug}`,\n        children: headersToSidebarItemChildren(\n          page,\n          header.children,\n          headerDepth - 1,\n        ),\n      }))\n    : [];\n\nexport interface ResolveArraySidebarOptions {\n  config: SidebarArrayOptions;\n  router: Router;\n  page: PageData;\n  headerDepth: number;\n  prefix?: string;\n}\n\n/**\n * Resolve sidebar items if the config is an array\n */\nexport const resolveArraySidebarItems = ({\n  config,\n  router,\n  page,\n  headerDepth,\n  prefix = \"\",\n}: ResolveArraySidebarOptions): ResolvedSidebarItem[] => {\n  const handleChildItem = (\n    item: SidebarItem,\n    pathPrefix = prefix,\n  ): ResolvedSidebarPageItem | ResolvedSidebarGroupItem => {\n    const childItem = isString(item)\n      ? resolveLinkInfo(router, resolvePrefix(pathPrefix, item))\n      : item.link\n        ? {\n            ...item,\n            ...(!isLinkExternal(item.link)\n              ? {\n                  link: resolveLinkInfo(\n                    router,\n                    resolvePrefix(pathPrefix, item.link),\n                  ).link,\n                }\n              : {}),\n          }\n        : item;\n\n    // resolved group item\n    if (\"children\" in childItem) {\n      const prefix = resolvePrefix(pathPrefix, childItem.prefix);\n\n      const children =\n        childItem.children === \"structure\"\n          ? sidebarData[prefix]\n          : childItem.children;\n\n      return {\n        type: \"group\",\n        ...childItem,\n        prefix,\n        children: children.map((item) => handleChildItem(item, prefix)),\n      };\n    }\n\n    return {\n      type: \"page\",\n      ...childItem,\n      children:\n        // if the sidebar item is current page and children is not set\n        // use headers of current page as children\n        childItem.link === page.path\n          ? headersToSidebarItemChildren(\n              page,\n              // skip h1 header\n              page.headers[0]?.level === 1\n                ? page.headers[0].children\n                : page.headers,\n              headerDepth,\n            )\n          : [],\n    };\n  };\n\n  return config.map((item) => handleChildItem(item));\n};\n\nexport interface ResolveMultiSidebarOptions {\n  config: SidebarObjectOptions;\n  router: Router;\n  page: PageData;\n  headerDepth: number;\n}\n\n/**\n * Resolve sidebar items if the config is a key -> value (path-prefix -> array) object\n */\nexport const resolveMultiSidebarItems = ({\n  config,\n  router,\n  page,\n  headerDepth,\n}: ResolveMultiSidebarOptions): ResolvedSidebarItem[] => {\n  const sidebarRoutes = keys(config).sort((x, y) => y.length - x.length);\n\n  // find matching config\n  for (const base of sidebarRoutes)\n    if (startsWith(decodeURI(page.path), base)) {\n      const matched = config[base];\n\n      return matched\n        ? resolveArraySidebarItems({\n            config:\n              matched === \"structure\"\n                ? <SidebarArrayOptions>sidebarData[base]\n                : matched === \"heading\"\n                  ? headersToSidebarItemChildren(\n                      page,\n                      page.headers,\n                      headerDepth,\n                    )\n                  : matched,\n            router,\n            page,\n            headerDepth,\n            prefix: base,\n          })\n        : [];\n    }\n\n  console.warn(`${page.path} is missing sidebar config.`);\n\n  return [];\n};\n\nexport interface ResolveSidebarOptions {\n  config: SidebarOptions;\n  router: Router;\n  routeLocale: string;\n  page: PageData;\n  headerDepth: number;\n}\n\n/**\n * Resolve sidebar items global computed\n *\n * It should only be resolved and provided once\n */\nexport const resolveSidebarItems = ({\n  config,\n  router,\n  routeLocale,\n  page,\n  headerDepth,\n}: ResolveSidebarOptions): ResolvedSidebarItem[] =>\n  // resolve sidebar items according to the config\n  config === \"heading\"\n    ? headersToSidebarItemChildren(page, page.headers, headerDepth)\n    : config === \"structure\"\n      ? resolveArraySidebarItems({\n          config: <SidebarArrayOptions>sidebarData[routeLocale],\n          router,\n          page,\n          headerDepth,\n          prefix: routeLocale,\n        })\n      : isArray(config)\n        ? resolveArraySidebarItems({ config, router, page, headerDepth })\n        : isPlainObject(config)\n          ? resolveMultiSidebarItems({ config, router, page, headerDepth })\n          : [];\n"]}